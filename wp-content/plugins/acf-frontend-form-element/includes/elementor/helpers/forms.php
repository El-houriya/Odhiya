<?php

if ( ! defined( 'ABSPATH' ) ) {
	exit; // Exit if accessed directly.
}

function acfef_validate_form( $args ) {
		
    // defaults
    // Todo: Allow message and button text to be generated by CPT settings.
    $args = wp_parse_args( $args, array(
        'id'					=> 'acf-form',
        'parent_form'			=> '',
        'post_id'				=> false,
        'new_post'				=> false,
        'field_groups'			=> false,
        'fields'				=> false,
        'post_title'			=> false,
        'post_content'			=> false,
        'form'					=> true,
        'form_attributes'		=> array(),
        'return'				=> add_query_arg( 'updated', 'true', acf_get_current_url() ),
        'html_before_fields'	=> '',
        'hidden_fields'         => [],
        'html_after_fields'		=> '',
        'submit_value'			=> __("Update", 'acf'),
        'update_message'		=> __("Post updated", 'acf'),
        'label_placement'		=> 'top',
        'instruction_placement'	=> 'label',
        'field_el'				=> 'div',
        'uploader'				=> 'wp',
        'honeypot'				=> true,
        'show_update_message'   => true,
        'html_updated_message'	=> '<div id="message" class="updated"><p>%s</p></div>', 
        'html_submit_button'	=> '<div class="acfef-submit-buttons"><input type="submit" class="acfef-submit-button acf-button button button-primary" value="%s" /><span class="acf-spinner"></span></div>',
        'html_submit_spinner'	=> '<span class="acf-spinner"></span>', 
        'kses'					=> true
    ));
    
    $args['form_attributes'] = wp_parse_args( $args['form_attributes'], array(
        'id'					=> $args['id'],
        'class'					=> 'acfef-form',
        'action'				=> admin_url( 'admin-post.php' ),
        'method'				=> 'post',
        'autocomplete'          => 'disableacf'
    ));
        
    // filter post_id
    $args['post_id'] = acf_get_valid_post_id( $args['post_id'] );   
    
    // new post?
    if( $args['post_id'] === 'new_post' ) {
        
        $args['new_post'] = wp_parse_args( $args['new_post'], array(
            'post_type' 	=> 'post',
            'post_status'	=> 'draft',
        ));
        
    }    
    
    // filter
    $args = apply_filters('acf/validate_form', $args);    
    
    // return
    return $args;
    
}

function acfef_render_form( $args = array() ) {
    acf_enqueue_scripts();
    
    $args = acfef_validate_form( $args );
		   
    // Extract vars.
    $post_id = $args['post_id'];

    if( $post_id === 'add_post' || $post_id === 'add_product' ) {
        $post_id = false;
    }
    
    // Set uploader type.
    acf_update_setting( 'uploader', $args['uploader'] );
    
    $fields = array();

    if( $args[ 'fields' ] ){
        foreach( $args['fields'] as $selector ) {
            $fields[] = acf_maybe_get_field( $selector, $post_id, false );
        }
    }else{
        return;
    }

    acf_add_local_field( array(
        'prefix'	=> 'acf',
        'name'		=> '_validate_email',
        'key'		=> '_validate_email',
        'label'		=> __('Validate Email', 'acf'),
        'type'		=> 'text',
        'value'		=> '',
        'wrapper'	=> array('style' => 'display:none !important;')
    ) );
    $fields[] = acf_get_field('_validate_email');
    
    if( $args['show_update_message'] ){
        if ( isset( $_GET[ 'updated' ] ) && $_GET[ 'updated' ] !== 'true' ){
            $form_id = explode( '_', $_GET[ 'updated' ] );
            $widget_id = $form_id[0];
            $page_id = $widget_page = $form_id[1];
            if( isset( $form_id[2] ) ) $page_id = $form_id[2];

            $update_message = $args['update_message'];
            if( strpos( $update_message, '[$' ) !== 'false' || strpos( $update_message, '[' ) !== 'false' ){
                $update_message = acfef_get_code_value( $update_message, $page_id );
            }  

            printf( $args['html_updated_message'], $update_message );
        }    
    }


    ?>
    <form <?php echo acfef_esc_attrs( $args['form_attributes'] ) ?>> 
    <input type="hidden" name="action" value="acfef/form_submit">
    <?php
        acf_form_data( array_merge( array( 
            'screen'	=> 'acf_form',
            'status'    => '',
            'post_id'	=> $args['post_id'],
            'form'		=> acf_encrypt(json_encode( $args ))
        ), $args[ 'hidden_fields' ] ) );
    ?>
    <?php if( isset( $args[ 'template_id' ] ) ){
		echo \Elementor\Plugin::$instance->frontend->get_builder_content_for_display( $args[ 'template_id' ] );
	}else{ ?>
    <div class="acf-fields acf-form-fields -<?php echo esc_attr($args['label_placement'])?>">
        <?php acf_render_fields( $fields, $post_id, $args['field_el'], $args['instruction_placement'] ); ?>
        <?php echo $args['html_after_fields']; ?>
    </div>
        <div class="acf-form-submit">
            <?php printf( $args['html_submit_button'], $args['submit_value'] ) ?>
        </div>
    <?php } ?> 
    </form>
    <?php
}

add_action( 'wp_ajax_acfef/form_submit', 'acfef_form_submit' );
add_action( 'wp_ajax_nopriv_acfef/form_submit', 'acfef_form_submit' );
add_action( 'admin_post_acfef/form_submit', 'acfef_form_submit' );
add_action( 'admin_post_nopriv_acfef/form_submit', 'acfef_form_submit' );
function acfef_form_submit() {
    acf()->form_front->check_submit_form();
}
